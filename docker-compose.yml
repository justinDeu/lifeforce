version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: lifeforce-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-lifeforce}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-lifeforce}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Lifeforce Application - Development Mode
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: lifeforce-app-dev
    depends_on:
      db:
        condition: service_healthy
    environment:
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: ${SERVER_PORT:-3000}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-lifeforce}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      RUST_LOG: ${RUST_LOG:-lifeforce=debug,tower_http=debug}
      # Allow connections from browser-sync
      BROWSER_SYNC_PORT: 3001
    ports:
      - "${SERVER_PORT:-3000}:3000"
      - "3001:3001"
    volumes:
      - ./:/app
      - cargo-cache:/usr/local/cargo/registry
      - target-cache:/app/target
      - node_modules:/app/node_modules
    restart: unless-stopped

  # Lifeforce Application - Production Mode
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lifeforce-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: ${SERVER_PORT:-3000}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-lifeforce}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      RUST_LOG: ${RUST_LOG:-lifeforce=info,tower_http=info}
    ports:
      - "${SERVER_PORT:-3000}:3000"
    restart: unless-stopped
    profiles:
      - prod

volumes:
  postgres-data:
  cargo-cache:
  target-cache:
  node_modules: